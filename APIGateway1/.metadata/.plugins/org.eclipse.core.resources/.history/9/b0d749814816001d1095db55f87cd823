package com.mindtree.hospital.implementation;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;

import com.mindtree.hospital.VO.Doctor;
import com.mindtree.hospital.VO.RequestTemplate;
import com.mindtree.hospital.entity.Hospital;
import com.mindtree.hospital.repository.HospitalRepository;
import com.mindtree.hospital.service.HospitalService;

@Component
public class HospitalImpl implements HospitalService {

	@Autowired
	HospitalRepository hospRepo;
	@Autowired
	RestTemplate restTemplate;
	
	@Override
	public Hospital add(Hospital hosp) {
		return hospRepo.save(hosp);
	}

	@Override
	public List<Hospital> list() {
		return hospRepo.findAll();
	}

	@Override
	public Hopsital update(long id, String name) {
		Hospital dept = hospRepo.findById(id);
		hosp.setName(name);
		return hospRepo.save(dept);
	}

	@Override
	public Hospital searchById(long id) {
		if(hospRepo.findById(id)==null)
		{
			return null;
		}
		return hospRepo.findById(id);
	}

	@Override
	public List<RequestTemplate> listWithDoc() {
		List<RequestTemplate> fullList = new ArrayList<RequestTemplate>();
		List<Hospital> allHosp = this.list();
		Iterator<Hospital> ir = allHosp.iterator();
		while(ir.hasNext())
		{
			Hospital dpt = ir.next();
			ResponseEntity<Doctor[]> response =
					  restTemplate.getForEntity(
							  "http://DOCTOR-SERVICE/doctors/Doctor-with-ascname/"+dpt.getId(),
							  Doctor[].class);
			Doctor[] doctors = response.getBody();
			List<Doctor> docs = Arrays.asList(doctors);
 			RequestTemplate RTm = new RequestTemplate();
			RTm.setHospital(hosp);
			RTm.setDoctorList(docs);
			fullList.add(RTm);
		}
		return fullList;
	}

	@Override
	public RequestTemplate specificHospDoctor(long hosp_id) {
		Hospital hospital  = this.searchById(hosp_id);
		
		ResponseEntity<Doctor[]> response =
				  restTemplate.getForEntity(
						  "http://DOCTOR-SERVICE/doctor/doctor-with-desc-age/"+hospital.getId(),
				  Doctor[].class);
		Doctor[] doctor = response.getBody();
		List<Doctor> doctor = Arrays.asList(doctor);
		RequestTemplate requestTemplate = new RequestTemplate();
		
		requestTemplate.setHospital(hospital);
		requestTemplate.setDoctorList(doctors);
		
		return requestTemplate;
	}

}

